;; in new minos, built from 12/28/2003 source

;; -----------------------------------------------------------------------------
;; configure package
;; -----------------------------------------------------------------------------

(require 'package)
(add-to-list 'package-archives '("gnu"   . "https://elpa.gnu.org/packages/"))
(add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/"))
(package-initialize)

;; -----------------------------------------------------------------------------
;; configure use-package
;; -----------------------------------------------------------------------------

(unless (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))
(eval-and-compile
  (setq use-package-always-ensure t
        use-package-expand-minimally t))

;; -----------------------------------------------------------------------------
;; configure defaults
;; -----------------------------------------------------------------------------

; (menu-bar-mode -1)
(tool-bar-mode -1)
(scroll-bar-mode -1)
(setq inhibit-startup-message t
      inhibit-startup-echo-area-message t
      confirm-nonexistent-file-or-buffer nil
      visible-bell 1
      sentence-end-double-space nil)
(fset 'yes-or-no-p 'y-or-n-p)
(column-number-mode 1)
(display-time-mode)
(delete-selection-mode t)
(setq initial-frame-alist
      '(
	(width . 102) ; character
	(height . 53) ; lines
	))
(setq default-frame-alist
      '(
	(width . 102) ; character
	(height . 55) ; lines
	))

;; -----------------------------------------------------------------------------
;; configure recent
;; -----------------------------------------------------------------------------

(use-package recentf
  :config
  (add-to-list 'recentf-exclude "\\elpa")
  (recentf-mode 1) ;;was t, set to 1 20220225 per systemcrafters
  (setq recentf-max-saved-items 50)
  (global-set-key (kbd "C-x f") 'recentf-open-files)
  (global-set-key (kbd "C-x C-r") 'ido-recentf-open))

;; -----------------------------------------------------------------------------
;; configure backups
;; -----------------------------------------------------------------------------

(setq backup-directory-alist '(("." . "~/.emacs.d/backups")))
(setq delete-old-versions -1)
(setq version-control t)
(setq vc-make-backup-files t)
(setq auto-save-file-name-transforms '((".*" "~/.emacs.d/auto-save-list/" t)))

;; -----------------------------------------------------------------------------
;; configure themes
;; -----------------------------------------------------------------------------

(use-package emacs
  :init
  (set-face-attribute 'default nil :family "DejaVu Sans Mono" :height 115)
  (set-face-attribute 'variable-pitch nil :family "DejaVu Serif" :height 1.2)
  (set-face-attribute 'fixed-pitch nil :family "DejaVu Sans Mono" :height 1.0)
  :config
  (load-theme 'modus-operandi)
  :bind ("<f5>" . modus-themes-toggle))
